# kubernetes/secrets.yaml.example
# This is an example template for creating Kubernetes Secrets.
# DO NOT commit this file with actual sensitive data.
# 1. Replace placeholder values with your actual Salesforce credentials.
# 2. Encode the values in Base64:
#    echo -n 'YOUR_CLIENT_ID' | base64
#    echo -n 'YOUR_CLIENT_SECRET' | base64
#    echo -n 'YOUR_USERNAME' | base64
#    echo -n 'YOUR_PASSWORD_AND_TOKEN' | base64
# 3. Create a new file (e.g., secrets.yaml) and use the Base64 encoded values in the 'data' section.
#    Alternatively, use 'stringData' for plain text values (Kubernetes will encode them).
# 4. Apply the secret to your cluster: kubectl apply -f secrets.yaml -n your-namespace

apiVersion: v1
kind: Secret
metadata:
  name: sfdc-api-secrets
  # namespace: your-namespace # Ensure this matches the namespace of your Deployment
type: Opaque # Default type for arbitrary user-defined data

# Option 1: Using 'stringData' (recommended for manual creation, values are plain text here)
# Kubernetes will automatically Base64 encode these values when the secret is created.
stringData:
  salesforce-client-id: "YOUR_SALESFORCE_CONNECTED_APP_CLIENT_ID"
  salesforce-client-secret: "YOUR_SALESFORCE_CONNECTED_APP_CLIENT_SECRET"
  salesforce-username: "YOUR_SALESFORCE_USERNAME"
  # IMPORTANT: For password, if it contains special characters, ensure it's correctly handled
  # by YAML and your shell when creating. Using stringData with quotes is usually safest.
  salesforce-password: "YOUR_SALESFORCE_PASSWORD_AND_SECURITY_TOKEN_IF_NEEDED" # e.g., mypasswordmytoken

# Option 2: Using 'data' (values must be Base64 encoded by you)
# data:
#   salesforce-client-id: "BASE64_ENCODED_CLIENT_ID"
#   salesforce-client-secret: "BASE64_ENCODED_CLIENT_SECRET"
#   salesforce-username: "BASE64_ENCODED_USERNAME"
#   salesforce-password: "BASE64_ENCODED_PASSWORD_AND_TOKEN"

# After creating your actual secrets.yaml (not this example file), apply it:
# kubectl apply -f your-actual-secrets.yaml -n your-namespace

# The Deployment (deployment.yaml) should then reference this secret:
# envFrom:
#   - secretRef:
#       name: sfdc-api-secrets
```
